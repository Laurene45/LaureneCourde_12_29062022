swagger: "2.0"
info:
  title: Bank Argent API documentation
  description: Contains all available API endpoints in this codebase
  version: "2.0.0"
  termsOfService: "http://swagger.io/terms/"
host: localhost:3001
basePath: /api/v2
schemes:
  - http
paths:
  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for Login
      parameters:
        - in: body
          name: body
          description: Login Payload
          required: true
          schema:
            $ref: "#/definitions/Login"
      produces:
        - application/json
      responses:
        "200":
          description: Login Successfully
          schema:
            $ref: "#/definitions/LoginResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for Signup
      parameters:
        - in: body
          name: body
          description: Signup Payload
          required: true
          schema:
            $ref: "#/definitions/User"
      produces:
        - application/json
      responses:
        "200":
          description: Signup Successfully
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
          
  /user/profile:
    post:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for fetching a user profile
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
          type: string
      produces:
        - application/json
      responses:
        "200":
          description: User profile retrieved successfully
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
          
    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for updating a user profile
      parameters:
        - in: header
          name: Authorization
          type: string
          description: Attach Bearer JWT token
          required: true
        - in: body
          name: body
          description: Update user profile attributes
          required: true
          schema:
            $ref: "#/definitions/UserProfile"
      produces:
        - application/json
      responses:
        "200":
          description: User profile retrieved successfully
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
          
  /user/{accountId}/transactions:
    get:
      tags:
        - Transaction Module
      summary: fetch  all transactions of a user for current month
      description: API to fetch all current month transactions of a user account
      produces:
        - application/json
      parameters:
        - name: Authorization
          in: header
          description: Attach Bearer JWT token
          required: true
          type: string
        - name: "accountId"
          in: "path"
          description: "A unique identifier used to identify the account"
          required: true
          type: "integer"
          format: "int64"
      security:
        - Bearer: []
      responses:
        "200":
          description: Account current month transactions successfully retrieved
          schema:
            allOf:
              - $ref: "#/definitions/TransactionResponse"
              - type: object
                properties:
                  body:
                    type: object
                    properties:
                      transactions:
                        type: array
                        description: user account current month transactions
                        items:
                          $ref: "#/definitions/Transaction"
        "400":
          description: Invalid values
          schema:
            $ref: "#/definitions/TransactionResponse"
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/TransactionResponse"
        "404":
          description: Transactions not found
          schema:
            $ref: "#/definitions/TransactionResponse"
        "500":
          description: Internal Server Error
          schema:
            $ref: "#/definitions/TransactionResponse"
            
  /user/{accountId}/transactions/{transactionId}:
    get:
      tags:
        - Transaction Module
      summary: Find transaction by id
      description: API for fetching informations of a selected transaction
      operationId: getTransactionById
      produces:
        - "application/json"
      parameters:
        - name: Authorization
          in: header
          description: Attach Bearer JWT token
          required: true
          type: string
        - name: "accountId"
          in: "path"
          description: "A unique identifier used to identify the account"
          required: true
          type: "integer"
          format: "int64"
        - name: "transactionId"
          in: "path"
          description: "ID of transaction to return"
          required: true
          type: "integer"
          format: "int64"
      responses:
        "200":
          description: "successful operation"
          schema:
            allOf:
              - $ref: "#/definitions/TransactionResponse"
              - type: object
                properties:
                  body:
                    type: object
                    properties:
                      transaction:
                        $ref: "#/definitions/TransactionData"
        "400":
          description: Invalid ID transaction
          schema:
            $ref: "#/definitions/TransactionResponse"
        "404":
          description: Transaction not found
          schema:
            $ref: "#/definitions/TransactionResponse"
        "500":
          description: Internal Server Error
          schema:
            $ref: "#/definitions/TransactionResponse"
      security:
        - Bearer: []
        
    put:
      tags:
        - Transaction Module
      summary: modify a transaction
      description: API for modify transaction
      operationId: updateTransactionById"
      produces:
        - application/json
      parameters:
        - name: Authorization
          in: header
          description: Attach Bearer JWT token
          required: true
          type: string
        - name: accountId
          in: path
          description: A unique identifier used to identify the account
          required: true
          type: string
        - name: transactionId
          in: path
          description: ID of transaction to return
          required: true
          type: "integer"
          format: "int64"
        - in: body
          name: body
          description: Transaction Payload / At least one value must be entered
          required: true
          schema:
            $ref: "#/definitions/UserTransaction"
      security:
        - Bearer: []
      responses:
        "200":
          description: transaction successfully updated
          schema:
            $ref: "#/definitions/TransactionResponse"
        "400":
          description: Invalid values
          schema:
            $ref: "#/definitions/TransactionResponse"
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/TransactionResponse"
        "404":
          description: Transaction not modify
          schema:
            $ref: "#/definitions/TransactionResponse"
        "500":
          description: Internal Server Error
          schema:
            $ref: "#/definitions/TransactionResponse"
                  
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
definitions:
  User:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
      firstName:
        type: string
        description: user first name
      lastName:
        type: string
        description: user last name
  Login:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
  ApiResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          id:
            type: string
          email:
            type: string
  LoginResponse:
    type: object
    properties:
      token:
        type: string
  UserProfile:
    type: object
    properties:
      firstName:
        type: string
      lastName:
        type: string
  Transaction:
    properties:
      id:
        type: string
        description: unique id
      amount:
        type: number
        description: transaction's amount
      date:
        type: string
        description: transaction's date
      description:
        type: string
        description: transaction's description
      balance:
        type: number
        description: balance amount
  TransactionResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
  TransactionData:
    properties:
      id:
        type: string
        description: unique id
      date:
        type: string
        description: transaction's date
      description:
        type: string
        description: transaction's description
      amount:
        type: number
        description: transaction's amount
      balance:
        type: number
        description: balance amount
      transtype:
        type: string
        description: Transaction's type
      category:
        type: string
        description: Transaction's category
      notes:
        type: string
        description: Transaction's notes
  UserTransaction:
    properties:
      category:
        type: string
        x-nullable: true
        description: Transaction's category
      notes:
        type: string
        x-nullable: true
        description: Transaction's notes
        
  